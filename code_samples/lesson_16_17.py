'''
10. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –Ω–∞–ø–∏—à–∏—Ç–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é —Ç–∏–ø–æ–≤ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É
mypy (–æ—Å—Ç–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –≤ –∫–æ–¥–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ. –Ø –≤—Å—ë —á–∏—Ç–∞—é!)
11. –°–¥–µ–ª–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–π –ø—Ä–∏–Ω—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ pprint —Å –ø–æ–¥–ø–∏—Å—å—é, –∫–∞–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –≥–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ üí™ (–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ
—É –Ω–µ–≥–æ –Ω–∞–¥–æ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, –∏–Ω–∞—á–µ –æ–Ω —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –µ—â–µ —Ä–∞–∑)
'''
# =========================================================
from typing import (List, Dict, Set, Union, Optional, Any, Callable)
from  pprint import pprint

# 1. –°–¥–µ–ª–∞–π—Ç–µ –∏–º–ø–æ—Ä—Ç full_dict –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ Marvel.py
from marvel import full_dict


#  2. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ —Ü–∏—Ñ—Ä —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, —Ä–∞–∑–±–µ–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–ø–∏—Å–æ–∫, –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç–µ –∫ –∫–∞–∂–¥–æ–º—É
# —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞ int –∏—Å–ø–æ–ª—å–∑—É—è map , –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∏—Å–ª–æ, –∏–Ω–∞—á–µ
# –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞ None
print('–ó–∞–¥–∞–Ω–∏–µ 2')
num_input: List[str] = input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ').split(' ')
num_input_map: List[int | None] = list(map(lambda num: int(num) if num.isdigit() else None, num_input))
pprint(num_input_map)

# 3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ filter –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ id –∏
# –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —Ñ–∏–ª—å–º–æ–≤, id –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –≤ –ø.2
print('–ó–∞–¥–∞–Ω–∏–µ 3')
num_input_filter: dict = dict(filter(lambda num: num[0] in num_input_map, full_dict.items()))
pprint(num_input_filter)

# 4. –°–æ—Å—Ç–∞–≤—å—Ç–µ set comprehension (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–∞) —Å–æ–±—Ä–∞–≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–ª—é—á–∞ director
# —Å–ª–æ–≤–∞—Ä—è –¥–∞—Ç–∞-—Å–µ—Ç–∞
print('–ó–∞–¥–∞–Ω–∏–µ 4')
director_set_comprehension: set = {movie['director'] for movie in full_dict.values() if movie['director'] != 'TBA'}
pprint(director_set_comprehension)

# 5. –°–æ—Å—Ç–∞–≤—å—Ç–µ dict comprehension (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–≤–∞—Ä—è) —Å–¥–µ–ª–∞–≤ –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è full_dict , –ø—Ä–∏ —ç—Ç–æ–º
# –ø—Ä–∏–º–µ–Ω–∏–º –≤ –∫ –∫–∞–∂–¥–æ–º—É 'year' –∑–Ω–∞—á–µ–Ω–∏—é, —Ñ—É–Ω–∫—Ü–∏—é str
print('–ó–∞–¥–∞–Ω–∏–µ 5')
str_dict_comprehension: Dict[int, Dict[str, str]] = {key:
                                                      { 'title': value['title'],
                                                        'year': str(value['year']),
                                                        'director': value['director'],
                                                        'screenwriter': value['screenwriter'],
                                                        'producer': value['producer'],
                                                        'stage': value['stage'],}
                                                    for key, value in full_dict.items()}
pprint(str_dict_comprehension)

# 6. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ filter –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ id –∏
# –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–∞ –±—É–∫–≤—É –ß
print('–ó–∞–¥–∞–Ω–∏–µ 6')
id_filter: Dict[int, Dict[str, Any]] = dict(filter(lambda n: n[1]['title'].startswith('–ß'), full_dict.items()))
pprint(id_filter)

# 7. –°–¥–µ–ª–∞–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å–ª–æ–≤–∞—Ä—è full_dict –ø–æ –æ–¥–Ω–æ–º—É (–ª—é–±–æ–º—É) –ø–∞—Ä–∞–º–µ—Ç—Ä—É, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º lambda –Ω–∞ –≤—ã—Ö–æ–¥–µ
# –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤—ã –¥–µ–ª–∞–µ—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É!
print('–ó–∞–¥–∞–Ω–∏–µ 7')
# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –¥–µ–ª–∞—é –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É screenwriter, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –Ω–µ —Å–∞–º—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π, –Ω–æ –∫—É–¥–∞ –¥–µ–≤–∞—Ç—å—Å—è:)
screenwriter_lambda: Dict[int, Dict[str, str | int]] = dict(sorted(full_dict.items(),
                                                                    key=lambda n: n[1]['screenwriter']))
pprint(screenwriter_lambda, sort_dicts=False)

# 8. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–¥–µ–ª–∞–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å–ª–æ–≤–∞—Ä—è full_dict –ø–æ –¥–≤—É–º (–ª—é–±–æ–º) –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º lambda
# –Ω–∞ –≤—ã—Ö–æ–¥–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤—ã –¥–µ–ª–∞–µ—Ç–µ
# —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É!
print('–ó–∞–¥–∞–Ω–∏–µ 8')
# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –¥–µ–ª–∞—é –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º stage, title
year_title_lambda: Dict[int, Dict[str, str | int]] = dict(
    sorted(full_dict.items(), key=lambda n: (n[1]['stage'], n[1]['title']))) # !!! –µ—Å–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞ –º–µ—Å—Ç–æ stage -> year, —Ç–æ –æ–Ω –±—É–¥–µ—Ç —Ä—É–≥–∞—Ç—å—Å—è, —Ö–æ—Ç—è –∑–Ω–∞—á–µ–Ω–∏–µ str | int –¥–∞–Ω–æ
pprint(year_title_lambda, sort_dicts=False)


# 9. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–∏–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ full_dict –Ω–æ
# –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ filter –∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤ —ç—Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ sorted
print('–ó–∞–¥–∞–Ω–∏–µ 9')
filter_sorted: Dict[int, Dict[str, str]] = dict(
    sorted(filter(lambda n: n[1]['title'].startswith('–ß'), full_dict.items()),
           key=lambda n: 3000 if n[1]['year'] == 'TBA' else n[1]['year']))
pprint(filter_sorted, sort_dicts=False)




